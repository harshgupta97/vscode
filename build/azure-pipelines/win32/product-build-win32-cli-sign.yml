parameters:
  - name: VSCODE_CLI_BINARY_NAME
    type: string
  - name: VSCODE_CLI_ARTIFACTS
    default: []
    type: object

steps:
  - task: NodeTool@0
    displayName: "Use Node.js"
    inputs:
      versionSpec: "16.x"

  - pwsh: |
      . build/azure-pipelines/win32/exec.ps1
      cd build
      exec { yarn }
    displayName: Install build dependencies

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode
      SecretsFilter: "ESRP-PKI,esrp-aad-username,esrp-aad-password"

  - ${{ each target in parameters.VSCODE_CLI_ARTIFACTS }}:
    - task: DownloadPipelineArtifact@2
      displayName: Download artifacts
      inputs:
        artifact: ${{ target }}
        path: $(Build.ArtifactStagingDirectory)/pkg/${{ target }}

  - task: UseDotNet@2
    displayName: "Use .NET"
    inputs:
      version: 3.x

  - task: EsrpClientTool@1
    displayName: "Use ESRP client"

  - powershell: |
      . build/azure-pipelines/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      $EsrpClientTool = (gci -directory -filter EsrpClientTool_* $(Agent.RootDirectory)\_tasks | Select-Object -last 1).FullName
      $EsrpCliZip = (gci -recurse -filter esrpcli.*.zip $EsrpClientTool | Select-Object -last 1).FullName
      mkdir -p $(Agent.TempDirectory)\esrpcli
      Expand-Archive -Path $EsrpCliZip -DestinationPath $(Agent.TempDirectory)\esrpcli
      $EsrpCliDllPath = (gci -recurse -filter esrpcli.dll $(Agent.TempDirectory)\esrpcli | Select-Object -last 1).FullName
      echo "##vso[task.setvariable variable=EsrpCliDllPath]$EsrpCliDllPath"
    displayName: Find ESRP CLI

  - powershell: |
      . build/azure-pipelines/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { node build\azure-pipelines\common\sign $env:EsrpCliDllPath windows $(ESRP-PKI) $(esrp-aad-username) $(esrp-aad-password) $(Build.ArtifactStagingDirectory)/pkg "*.exe" }
    displayName: "Code sign"

  - ${{ each target in parameters.VSCODE_CLI_ARTIFACTS }}:
    - powershell: |
        $ASSET_ID = "${{ target }}".replace("-unsigned", "");
        echo "##vso[task.setvariable variable=ASSET_ID]$ASSET_ID"
      displayName: Set asset id variable

    - publish: $(Build.ArtifactStagingDirectory)/pkg/${{ target }}/${{ parameters.VSCODE_CLI_BINARY_NAME }}.exe
      artifact: $(ASSET_ID)
